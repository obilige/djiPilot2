version: "3"

services:
  # 서비스 입장하는 입구 역할. 하나의 포트로 모든 서비스 연결할 수 있도록 만들어주기 위해 build
  ReverseProxyServer:
    image: localhost:1234/pilot2-nginx-proxy
    depends_on:
      - pilot2front
    ports:
      - "8756:8756"
      - "443:443"
    environment:
      - TZ=Asia/Seoul

  # dji에서 pilot2 개발을 위해 제공하는 샘플 프론트 페이지 활용
  # 구조 변경
  pilot2front:
    build: ./front
    image: localhost:1234/pilot2-front
    depends_on:
      - pilot2back
    expose:
      - "8080"

  # 개발중인 백엔드(main). 회사에선 nodejs로 개발. 현 포폴에선 python으로 개발.
  pilot2back:
    build: ./back
    image: localhost:1234/pilot2-back
    depends_on:
      - database
      - emqx-broker
    expose:
      - "6789"

  # database: postgresSQL
  database:
    build: ./database
    image: localhost:1234/pilot2-database
    ports:
      - "5432:5432"
    volumes:
      - ~/storage/postgresql/data12.4:/var/lib/postgresql/data
    # networks:
    #   - custom_network

  # broker - client || subscribe - publish 개념으로 서버간 메세지 주고받는 프로토콜
  # 18083은 mqtt 관리자용 dashboard. 관리 편이성 위해 외부에 노출. 사용하지 않으면 ports 옵션은 지워줘도 무방함
  emqx-broker:
    image: emqx:5
    environment:
      - EMQX_ALLOW_ANONYMOUS=true
    # networks:
    #   - custom_network

  # websocket - mqtt data 담아둘 때 사용할 in-memory db
  redis:
    build: ./redis
    image: pilot2-redis
    expose:
      - "6379"

  # livestreaming service 위해 테스트 중인 rtmp - webrtc 변환 서버
  ome:
    image: localhost:1234/pilot2-ome
    # 1935: rtmp / 3333: webrtc / 3478: for getting out webrtc
    ports:
      - 1935:1935
      # - 9999:9999/udp
      # - 9000:9000
      - 3333:3333

      # - 10000-10009:10000-10009/udp
    environment:
      - OME_HOST_IP="Your IP ADDRESS"

  # livestreaming player
  ovenplayer:
    image: airensoft/ovenplayerdemo:latest
    expose:
      - "80"
    # networks:
    #   - custom_network

  # cloud storage(OSS)
  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER : team3
      MINIO_ROOT_PASSWORD: visumy00
    expose:
      - "9000"
      - "9001" # manage web-page
    volumes:
      - ./oss/data:/data